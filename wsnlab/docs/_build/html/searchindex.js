Search.setIndex({"docnames": ["index", "modules", "myProject"], "filenames": ["index.rst", "modules.rst", "myProject.rst"], "titles": ["Welcome to Complete WSN\u2019s documentation!", "myProject", "myProject package"], "terms": {"index": 0, "modul": [0, 1], "search": 0, "page": 0, "packag": 1, "submodul": 1, "mywsn": 1, "role": [1, 2], "cluster_head": [1, 2], "regist": [1, 2], "root": [1, 2], "undiscov": [1, 2], "unregist": [1, 2], "sensornod": [1, 2], "become_unregist": [1, 2], "check_neighbor": [1, 2], "init": [1, 2], "multicast_subscrib": [1, 2], "on_rec": [1, 2], "on_timer_fir": [1, 2], "repair": [1, 2], "repair_all_orphan": [1, 2], "repair_find_another_par": [1, 2], "route_and_forward_packag": [1, 2], "run": [1, 2], "select_and_join": [1, 2], "send_clusterhead_ack": [1, 2], "send_clusterhead_transf": [1, 2], "send_heart_beat": [1, 2], "send_i_am_orphan": [1, 2], "send_join_ack": [1, 2], "send_join_repli": [1, 2], "send_join_request": [1, 2], "send_network_repli": [1, 2], "send_network_request": [1, 2], "send_network_upd": [1, 2], "send_prob": [1, 2], "set_color": [1, 2], "update_neighbor": [1, 2], "create_network": [1, 2], "content": 1, "class": 2, "valu": 2, "base": 2, "enum": 2, "enumer": 2, "5": 2, "4": 2, "3": 2, "1": 2, "2": 2, "sim": 2, "id": 2, "po": 2, "sourc": 2, "node": 2, "i": 2, "inherit": 2, "from": 2, "wsnlab": 2, "py": 2, "It": 2, "data": 2, "collect": 2, "tree": 2, "construct": 2, "algorithm": 2, "attribut": 2, "is_root_elig": 2, "bool": 2, "elig": 2, "c_probe": 2, "int": 2, "probe": 2, "messag": 2, "counter": 2, "th_probe": 2, "threshold": 2, "neighbors_t": 2, "dict": 2, "keep": 2, "neighbor": 2, "inform": 2, "receiv": 2, "heart": 2, "beat": 2, "reset": 2, "all": 2, "necessari": 2, "variabl": 2, "becom": 2, "arg": 2, "return": 2, "check": 2, "thei": 2, "ar": 2, "still": 2, "aliv": 2, "If": 2, "updat": 2, "tabl": 2, "send": 2, "heartbeat": 2, "network": 2, "need": 2, "initi": 2, "set": 2, "At": 2, "begin": 2, "sleep": 2, "its": 2, "should": 2, "subscrib": 2, "listen": 2, "multicast": 2, "packet": 2, "pck": 2, "execut": 2, "when": 2, "name": 2, "kwarg": 2, "timer": 2, "fire": 2, "string": 2, "addit": 2, "kei": 2, "word": 2, "chosen": 2, "instruct": 2, "am": 2, "orphan": 2, "ha": 2, "potenti": 2, "parent": 2, "tri": 2, "connect": 2, "ani": 2, "them": 2, "otherwis": 2, "rout": 2, "forward": 2, "given": 2, "contain": 2, "dest": 2, "type": 2, "arriv": 2, "wake": 2, "up": 2, "dead": 2, "die": 2, "choos": 2, "minimum": 2, "hop": 2, "count": 2, "tie": 2, "gui": 2, "join": 2, "request": 2, "addition": 2, "make": 2, "self": 2, "optim": 2, "multipl": 2, "simul": 2, "select": 2, "prioriti": 2, "clusterhead": 2, "lastli": 2, "acknowledg": 2, "destin": 2, "address": 2, "so": 2, "function": 2, "router": 2, "between": 2, "two": 2, "cluster": 2, "addr": 2, "transfer": 2, "head": 2, "repli": 2, "The": 2, "includ": 2, "determin": 2, "which": 2, "take": 2, "thi": 2, "an": 2, "assign": 2, "root_addr": 2, "global": 2, "uniqu": 2, "new": 2, "discov": 2, "child_network": 2, "member": 2, "candid": 2, "incom": 2, "node_class": 2, "number_of_nod": 2, "100": 2, "creat": 2, "number": 2, "random": 2, "posit": 2, "time": 2}, "objects": {"": [[2, 0, 0, "-", "myProject"]], "myProject": [[2, 0, 0, "-", "myWSN"]], "myProject.myWSN": [[2, 1, 1, "", "Roles"], [2, 1, 1, "", "SensorNode"], [2, 4, 1, "", "create_network"]], "myProject.myWSN.Roles": [[2, 2, 1, "", "CLUSTER_HEAD"], [2, 2, 1, "", "REGISTERED"], [2, 2, 1, "", "ROOT"], [2, 2, 1, "", "UNDISCOVERED"], [2, 2, 1, "", "UNREGISTERED"]], "myProject.myWSN.SensorNode": [[2, 3, 1, "", "become_unregistered"], [2, 3, 1, "", "check_neighbors"], [2, 3, 1, "", "init"], [2, 3, 1, "", "multicast_subscribe"], [2, 3, 1, "", "on_receive"], [2, 3, 1, "", "on_timer_fired"], [2, 3, 1, "", "repair"], [2, 3, 1, "", "repair_all_orphan"], [2, 3, 1, "", "repair_find_another_parent"], [2, 3, 1, "", "route_and_forward_package"], [2, 3, 1, "", "run"], [2, 3, 1, "", "select_and_join"], [2, 3, 1, "", "send_clusterhead_ack"], [2, 3, 1, "", "send_clusterhead_transfer"], [2, 3, 1, "", "send_heart_beat"], [2, 3, 1, "", "send_i_am_orphan"], [2, 3, 1, "", "send_join_ack"], [2, 3, 1, "", "send_join_reply"], [2, 3, 1, "", "send_join_request"], [2, 3, 1, "", "send_network_reply"], [2, 3, 1, "", "send_network_request"], [2, 3, 1, "", "send_network_update"], [2, 3, 1, "", "send_probe"], [2, 3, 1, "", "set_colors"], [2, 3, 1, "", "update_neighbor"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "complet": 0, "wsn": 0, "": 0, "document": 0, "indic": 0, "tabl": 0, "myproject": [1, 2], "packag": 2, "submodul": 2, "mywsn": 2, "modul": 2, "content": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to Complete WSN\u2019s documentation!": [[0, "welcome-to-complete-wsn-s-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "myProject": [[1, "myproject"]], "myProject package": [[2, "myproject-package"]], "Submodules": [[2, "submodules"]], "myProject.myWSN module": [[2, "module-myProject.myWSN"]], "Module contents": [[2, "module-myProject"]]}, "indexentries": {"cluster_head (myproject.mywsn.roles attribute)": [[2, "myProject.myWSN.Roles.CLUSTER_HEAD"]], "registered (myproject.mywsn.roles attribute)": [[2, "myProject.myWSN.Roles.REGISTERED"]], "root (myproject.mywsn.roles attribute)": [[2, "myProject.myWSN.Roles.ROOT"]], "roles (class in myproject.mywsn)": [[2, "myProject.myWSN.Roles"]], "sensornode (class in myproject.mywsn)": [[2, "myProject.myWSN.SensorNode"]], "undiscovered (myproject.mywsn.roles attribute)": [[2, "myProject.myWSN.Roles.UNDISCOVERED"]], "unregistered (myproject.mywsn.roles attribute)": [[2, "myProject.myWSN.Roles.UNREGISTERED"]], "become_unregistered() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.become_unregistered"]], "check_neighbors() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.check_neighbors"]], "create_network() (in module myproject.mywsn)": [[2, "myProject.myWSN.create_network"]], "init() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.init"]], "module": [[2, "module-myProject"], [2, "module-myProject.myWSN"]], "multicast_subscribe() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.multicast_subscribe"]], "myproject": [[2, "module-myProject"]], "myproject.mywsn": [[2, "module-myProject.myWSN"]], "on_receive() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.on_receive"]], "on_timer_fired() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.on_timer_fired"]], "repair() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.repair"]], "repair_all_orphan() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.repair_all_orphan"]], "repair_find_another_parent() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.repair_find_another_parent"]], "route_and_forward_package() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.route_and_forward_package"]], "run() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.run"]], "select_and_join() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.select_and_join"]], "send_clusterhead_ack() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.send_clusterhead_ack"]], "send_clusterhead_transfer() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.send_clusterhead_transfer"]], "send_heart_beat() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.send_heart_beat"]], "send_i_am_orphan() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.send_i_am_orphan"]], "send_join_ack() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.send_join_ack"]], "send_join_reply() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.send_join_reply"]], "send_join_request() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.send_join_request"]], "send_network_reply() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.send_network_reply"]], "send_network_request() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.send_network_request"]], "send_network_update() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.send_network_update"]], "send_probe() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.send_probe"]], "set_colors() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.set_colors"]], "update_neighbor() (myproject.mywsn.sensornode method)": [[2, "myProject.myWSN.SensorNode.update_neighbor"]]}})